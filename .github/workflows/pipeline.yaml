name: Deployment workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  install-dependencies:
    name: Install Node modules
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: 16
      - name: Install dependencies
        run: npm install

  build: 
    needs: [install-dependencies]
    name: Build the app
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: 16
      - name: Install dependencies
        run: npm install
      - name: Build app
        run: npm run build

      # We save the build, because we are going to need it in the deployment step
      # and we want to avoid building again
      - name: Save build
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build


  test:
    needs: [install-dependencies]
    name: Run tests
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: 16
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm run test

  deploy:
    needs: [build, test]
    name: Deploy to Render
    runs-on: ubuntu-22.04
    steps:
      # See that Render creates the build and start the app automatically,
      # so we don't need to do any more
      # But if we need to build the app, we could use the already created one:
      - name: Get the build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build
      # ------------------------------------------------
      - name: Deploy to Render
        if: ${{ github.event_name == 'push' }}
        uses: sws2apps/render-deployment@main
        with:
          serviceId: ${{ secrets.RENDER_SERVICE_ID }}
          apiKey: ${{ secrets.RENDER_API_KEY }}
          multipleDeployment: false
        